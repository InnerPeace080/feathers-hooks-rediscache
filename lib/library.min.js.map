{"version":3,"sources":["webpack://library/webpack/universalModuleDefinition","webpack://library/webpack/bootstrap","webpack://library/external \"qs\"","webpack://library/./src/hooks/helpers/path.js","webpack://library/external \"chalk\"","webpack://library/external \"moment\"","webpack://library/./src/hooks/redis.js","webpack://library/./src/hooks/cache.js","webpack://library/external \"redis\"","webpack://library/./src/redisClient.js","webpack://library/./src/routes/helpers/redis.js","webpack://library/external \"express\"","webpack://library/./src/routes/cache.js","webpack://library/./src/index.js"],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","w","s","require","_qs","parsePath","hook","config","arguments","length","undefined","removePathFromCacheKey","parseNestedRoutes","q","params","query","remove","path","id","re","RegExp","match","exec","keys","route","includes","replace","parseNestedPath","_qs2","default","stringify","encode","before","options","assign","defaults","Promise","resolve","client","app","cacheOptions","_path","err","reply","data","JSON","parse","duration","_moment2","cache","expiresOn","format","wrapped","result","console","log","_chalk2","cyan","green","after","cached","cachingDefault","defaultDuration","add","parent","group","key","set","expire","rpush","humanize","Array","isArray","array","removeCacheInformation","this","_redis2","createClient","_redis","RedisCache","_classCallCheck","_this","reject","del","_this2","lrange","clearAll","then","e","_this3","clearSingle","router","_express2","Router","h","req","res","flushall","status","json","message","t","url","split","target","clearGroup","_cache3","redisClient","cacheRoutes","hookCache","hookRemoveCacheInformation","redisBeforeHook","redisAfterHook"],"mappings":"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","file":"library.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"library\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"library\"] = factory();\n\telse\n\t\troot[\"library\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","module.exports = require(\"qs\");","import qs from 'qs';\n\nfunction parseNestedPath(path, params) {\n  const re = new RegExp(':([^\\\\/\\\\?]+)\\\\??', 'g');\n  let match = null;\n\n  while ((match = re.exec(path)) !== null) {\n    if (Object.keys(params.route).includes(match[1])) {\n      path = path.replace(match[0], params.route[match[1]]);\n    }\n  }\n\n  return path;\n}\n\nfunction parsePath(hook, config = {removePathFromCacheKey: false, parseNestedRoutes: false}) {\n  const q = hook.params.query || {};\n  const remove = config.removePathFromCacheKey;\n  const parseNestedRoutes = config.parseNestedRoutes;\n  let path = remove && hook.id ? '' : `${hook.path}`;\n\n  if (!remove && parseNestedRoutes) {\n    path = parseNestedPath(path, hook.params);\n  }\n\n  if (hook.id) {\n    if (path.length !== 0 && !remove) {\n      path += '/';\n    }\n    if (Object.keys(q).length > 0) {\n      path += `${hook.id}?${qs.stringify(q, { encode: false })}`;\n    } else {\n      path += `${hook.id}`;\n    }\n  } else {\n    if (Object.keys(q).length > 0) {\n      path += `?${qs.stringify(q, { encode: false })}`;\n    }\n  }\n\n  return path;\n}\n\nexport { parsePath };\n","module.exports = require(\"chalk\");","module.exports = require(\"moment\");","import moment from 'moment';\nimport chalk from 'chalk';\nimport { parsePath } from './helpers/path';\n\nconst defaults = {};\n\nexport function before(options) { // eslint-disable-line no-unused-vars\n  options = Object.assign({}, defaults, options);\n\n  return function (hook) {\n    return new Promise(resolve => {\n      const client = hook.app.get('redisClient');\n      const cacheOptions = hook.app.get('redisCache');\n      const path = parsePath(hook, cacheOptions);\n\n      client.get(path, (err, reply) => {\n        if (err !== null) resolve(hook);\n        if (reply) {\n          let data = JSON.parse(reply);\n          const duration = moment(data.cache.expiresOn).format('DD MMMM YYYY - HH:mm:ss');\n\n          if (data.cache.hasOwnProperty('wrapped')) {\n            const { wrapped } = data.cache;\n\n            data = wrapped;\n          }\n          hook.result = data;\n          resolve(hook);\n\n          /* istanbul ignore next */\n          if (process.env.NODE_ENV !== 'test') {\n            console.log(`${chalk.cyan('[redis]')} returning cached value for ${chalk.green(path)}.`);\n            console.log(`> Expires on ${duration}.`);\n          }\n        } else {\n          resolve(hook);\n        }\n      });\n    });\n  };\n};\n\nexport function after(options) { // eslint-disable-line no-unused-vars\n  options = Object.assign({}, defaults, options);\n\n  return function (hook) {\n    return new Promise(resolve => {\n      if (!hook.result.cache.cached) {\n        const cacheOptions = hook.app.get('redisCache');\n        const cachingDefault = cacheOptions.defaultDuration ? cacheOptions.defaultDuration : 3600 * 24;\n        const duration = hook.result.cache.duration || cachingDefault;\n        const client = hook.app.get('redisClient');\n        const path = parsePath(hook, cacheOptions);\n\n        // adding a cache object\n        Object.assign(hook.result.cache, {\n          cached: true,\n          duration: duration,\n          expiresOn: moment().add(moment.duration(duration, 'seconds')),\n          parent: hook.path,\n          group: hook.path ? `group-${hook.path}` : '',\n          key: path\n        });\n\n        client.set(path, JSON.stringify(hook.result));\n        client.expire(path, hook.result.cache.duration);\n        if (hook.path) {\n          client.rpush(hook.result.cache.group, path);\n        }\n\n        /* istanbul ignore next */\n        if (process.env.NODE_ENV !== 'test') {\n          console.log(`${chalk.cyan('[redis]')} added ${chalk.green(path)} to the cache.`);\n          console.log(`> Expires in ${moment.duration(duration, 'seconds').humanize()}.`);\n        }\n      }\n      resolve(hook);\n    });\n  };\n};\n\n","/**\n * After hook - generates a cache object that is needed\n * for the redis hook and the express middelware.\n * @todo add default value in config file\n */\nconst defaults = {};\n\nexport function cache(options) { // eslint-disable-line no-unused-vars\n  options = Object.assign({}, defaults, options);\n\n  return function (hook) {\n    if (!hook.result.hasOwnProperty('cache')) {\n      let cache = {};\n\n      if (Array.isArray(hook.result)) {\n        const array = hook.result;\n\n        cache.wrapped = array;\n        hook.result = {};\n      }\n\n      cache = Object.assign({}, cache, {\n        cached: false,\n        duration: options.duration || 3600 * 24\n      });\n\n      hook.result.cache = cache;\n    }\n    return Promise.resolve(hook);\n  };\n};\n\nexport function removeCacheInformation(options) { // eslint-disable-line no-unused-vars\n  options = Object.assign({}, defaults, options);\n\n  return function (hook) {\n    if (hook.result.hasOwnProperty('cache')) {\n      delete hook.result.cache;\n    }\n    return Promise.resolve(hook);\n  };\n};\n","module.exports = require(\"redis\");","import redis from 'redis';\n\nexport default function redisClient() { // eslint-disable-line no-unused-vars\n  this.set('redisClient', redis.createClient(this.get('redis')));\n}\n","export default class RedisCache {\n  constructor(client) {\n    this.client = client;\n  }\n\n  /**\n   * scan the redis index\n   */\n  // scan() {\n  //   // starts at 0 if cursor is again 0 it means the iteration is finished\n  //   let cursor = '0';\n\n  //   return new Promise((resolve, reject) => {\n  //     this.client.scan(cursor, 'MATCH', '*', 'COUNT', '100', (err, reply) => {\n  //       if (err) {\n  //         reject(err);\n  //       }\n\n  //       cursor = reply[0];\n  //       if (cursor === '0') {\n  //         resolve(reply[1]);\n  //       } else {\n  //         // do your processing\n  //         // reply[1] is an array of matched keys.\n  //         // console.log(reply[1]);\n  //         return this.scan();\n  //       }\n  //       return false;\n  //     });\n\n  //   });\n  // }\n\n  /**\n   * Async scan of the redis index\n   * Do not for get to passin a Set\n   * myResults = new Set();\n   *\n   * scanAsync('0', \"NOC-*[^listen]*\", myResults).map(\n   *   myResults => { console.log( myResults); }\n   * );\n   *\n   * @param {String} cursor - string '0'\n   * @param {String} patern - string '0'\n   * @param {Set} returnSet - pass a set to have unique keys\n   */\n  // scanAsync(cursor, pattern, returnSet) {\n  //   // starts at 0 if cursor is again 0 it means the iteration is finished\n\n  //   return new Promise((resolve, reject) => {\n  //     this.client.scan(cursor, 'MATCH', pattern, 'COUNT', '100', (err, reply) => {\n\n  //       if (err) {\n  //         reject(err);\n  //       }\n\n  //       cursor = reply[0];\n  //       const keys = reply[1];\n\n  //       keys.forEach((key, i) => {\n  //         returnSet.add(key);\n  //       });\n\n  //       if (cursor === '0') {\n  //         resolve(Array.from(returnSet));\n  //       }\n\n  //       return this.scanAsync(cursor, pattern, returnSet);\n  //     });\n  //   });\n  // }\n\n  /**\n   * Clean single item from the cache\n   * @param {string} key - the key to find in redis\n   */\n  clearSingle(key) {\n    return new Promise((resolve, reject) => {\n      this.client.del(`${key}`, (err, reply) => {\n        if (err) reject(false);\n        if (reply === 1) {\n          resolve(true);\n        }\n        resolve(false);\n      });\n    });\n  }\n\n  /**\n   * Clear a group\n   * @param {string} key - key of the group to clean\n   */\n  clearGroup(key) {\n    return new Promise((resolve, reject) => {\n      this.client.lrange(key, 0, -1, (err, reply) => {\n        if (err) {\n          reject(err);\n        }\n        this.clearAll(reply).then(\n          this.client.del(key, (e, r) => {\n            resolve(r === 1);\n          })\n        );\n      });\n    });\n  }\n\n  /**\n   * Clear all keys of a redis list\n   * @param {Object[]} array\n   */\n  clearAll(array) {\n    return new Promise(resolve => {\n      if (!array.length) resolve(false);\n      let i = 0;\n\n      for (i; i < array.length; i++) {\n        this.clearSingle(array[i]).then(r => {\n          if (i === array.length - 1) {\n            resolve(r);\n          }\n        });\n      }\n    });\n  }\n};\n","module.exports = require(\"express\");","import express from 'express';\n// import redis from 'redis';\nimport RedisCache from './helpers/redis';\n\nfunction routes(app) {\n  const router = express.Router();\n  const client = app.get('redisClient');\n  const h = new RedisCache(client);\n\n  // adding some cache routes\n\n  router.get('/clear', (req, res) => {\n    client.flushall();\n    res.status(200).json({\n      message: 'Cache cleared'\n    });\n  });\n\n  // clear a unique route\n  router.get('/clear/single/:target?', (req, res) => {\n    const t = req.url.split('/')[3];\n\n    if (t.includes('?')) {\n      h.clearSingle(t).then(r => {\n        res.status(200).json({\n          message: `cache ${r ? '' : 'already'} cleared for key (with params): ${t}`,\n          status: r ? 200 : 204\n        });\n      });\n    } else {\n      h.clearSingle(req.params.target).then(r => {\n        res.status(200).json({\n          message: `cache ${r ? '' : 'already'} cleared for key (without params): ${req.params.target}`,\n          status: r ? 200 : 204\n        });\n      });\n    }\n  });\n\n  // clear a group\n  router.get('/clear/group/:target', (req, res) => {\n    client.get(`${req.params.target}`, (err, reply) => {\n      if (err) {\n        res.status(500).json({message: 'something went wrong' + err.message });\n      } else {\n        const group = reply ? JSON.parse(reply).cache.group : '';\n\n        h.clearGroup(group).then(r => {\n          res.status(200).json({\n            message: `cache ${r ? '' : 'already'} cleared for the group key: ${req.params.target}`,\n            status: r ? 200 : 204\n          });\n        });\n      }\n    });\n  });\n\n  // add route to display cache index\n  // this has been removed for performance issues\n  // router.get('/index', (req, res) => {\n  //   let results = new Set();\n\n  //   h.scanAsync('0', '*', results)\n  //     .then(data => {\n  //       res.status(200).json(data);\n  //     })\n  //     .catch(err => {\n  //       res.status(404).json(err);\n  //     });\n\n  // });\n\n  return router;\n}\n\nexport default routes;\n","import cacheRoutes from './routes/cache';\nimport redisClient from './redisClient';\nimport { cache as hookCache } from './hooks/cache';\nimport { removeCacheInformation as hookRemoveCacheInformation } from './hooks/cache';\nimport { before as redisBeforeHook} from './hooks/redis';\nimport { after as redisAfterHook} from './hooks/redis';\n\nexport {\n  redisClient,\n  cacheRoutes,\n  hookCache,\n  hookRemoveCacheInformation,\n  redisBeforeHook,\n  redisAfterHook\n};\n"],"sourceRoot":""}